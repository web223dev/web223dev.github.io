{"version":3,"sources":["modules/home/post.js","modules/home/type.js","components/MovieSection/index.js","containers/Home/SliderSettings.js","components/ConvertImage.js","containers/Home/TitleList.js","containers/Home/TitleField.js","containers/Home/HomeContainer.js","views/Home/index.js","components/PageHeader/index.js","modules/dramas/postdrama.js","modules/dramas/type.js","containers/Dramas/DramasContainer.js","views/Dramas/index.js","containers/Entertainment/EntertainmentContainer.js","views/Entertainment/index.js","containers/News/NewsContainer.js","views/News/index.js","modules/films/postmovie.js","modules/films/type.js","containers/Films/FilmsContainer.js","views/Films/index.js","containers/Originals/OriginalsContainer.js","views/Originals/index.js","containers/RecentlyAdded/RecentlyAddedContainer.js","views/RecentlyAdded/index.js","modules/moviedetail/post.js","modules/moviedetail/type.js","modules/moviedetail/similar.js","containers/MovieDetail/detailSliderSettings.js","containers/MovieDetail/MovieDetailContainer.js","views/MovieDetail/index.js","modules/tvdetail/postdrama.js","modules/tvdetail/type.js","modules/tvdetail/similartv.js","components/TVSection/index.js","containers/TVDetail/TVDetailContainer.js","views/TVDetail/index.js","containers/Watch/WatchContainer.js","routes.js","views/Watch/index.js","components/Menu/CommonMenu.js","modules/home/searchmovie.js","components/Menu/Input.js","components/Menu/index.js","components/App.js","serviceWorker.js","modules/home/index.js","modules/films/index.js","modules/dramas/index.js","modules/moviedetail/index.js","modules/tvdetail/index.js","modules/index.js","index.js","assets/images/Logos/Daredevil.png"],"names":["apiKey","requestMovie","type","receiveMovie","data","payload","falidReceiveMovie","error","getMovie","url","dispatch","keyword","axios","get","concat","then","res","catch","err","MovieSection","_ref","mdetail","bgImg","pagename","category","react_default","a","createElement","className","react_router_dom","to","id","src","undefined","alt","title","height","settings","infinite","speed","slidesToScroll","slidesToShow","responsive","breakpoint","ConvertImage","size","path","fullImg","TitleList","nextProps","_this$props","this","props","PostActions","urlString","_this$props2","movieDataShow","searchedMovieShow","_this$props3","moviedatas","sectionId","searched_movie","data_loaded","length","results","map","searchedMovie","i","backdrop_path","components_MovieSection","key","toJS","data-loaded","lib_default","Component","connect","state","home","search_movie","bindActionCreators","postActions","withRouter","tdetails","TitleField","Home_TitleList","tdetail","HomeContainer","Home_TitleField","Home","Home_HomeContainer","PageHeader","name","children","requestTV","receiveTV","falidReceiveTV","getPopularDrama","FilmsContainer","DramaActions","history","push","errors","console","warn","dramaDataShow","ddatas","dramadatas","ddata","components_PageHeader","react_stack_grid_lib_default","columnWidth","monitorImagesLoaded","dramas","dramaActions","Dramas","DramasContainer","EntertainmentContainer","Entertainment","Entertainment_EntertainmentContainer","NewsContainer","News","News_NewsContainer","getPopularMovie","todayDate","Date","today","getFullYear","getMonth","getDate","oneMonthAgo","getPopularMovieAPI","mdatas","mdata","films","Films","Films_FilmsContainer","OriginalsContainer","Originals","Originals_OriginalsContainer","RecentlyAddedContainer","RecentlyAdded","RecentlyAdded_RecentlyAddedContainer","getMovieDetail","getMovieDetailAPI","getSimilarMovie","getSimilarMovieAPI","handleActions","_handleActions","Object","defineProperty","action","objectSpread","pending","initialSlide","variableWidth","MovieDetailContainer","SimilarMovieActions","location","pathname","substring","prevProps","SimilarMovies","moviedata","sm_movies","similar_movies","smilar_movie","poster_path","smImg","vote_average","current_rating","style","backgroundImage","Daredevil","build_default","rating","starRatedColor","starEmptyColor","starDimension","starSpacing","release_date","composedMovieDetailContainer","compose","moviedetail","similar","similarMovieActions","MovieDetail","MovieDetail_MovieDetailContainer","getDramaDetail","tv_id","getSimilarTV","similartv_handleActions","TVSection","TVDetailContainer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","episodes_count","SimilarTVActions","SimilarTVs","dramadata","sm_tvs","similar_tv","smilar_tv","components_TVSection","original_name","first_air_date","number_of_seasons","tvdetail","similartv","similarTVActions","TVDetail","TVDetail_TVDetailContainer","playlist","file","image","tracks","label","kind","default","description","WatchContainer","videoTitle","onVideoLoad","bind","assertThisInitialized","event","setState","item","react_jw_player_default","playerId","playerScript","customProps","displayMode","dashboardRoutes","component","Watch_WatchContainer","CommonMenu","toggleDropdown","toggle","dropdownOpen","isOpen","Navbar","light","expand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","borderColor","Dropdown","nav","inNavbar","DropdownToggle","onMouseOver","caret","DropdownMenu","left","DropdownItem","getSearchedMovie","getSearchedMovieAPI","searchmovie_handleActions","Input","handleChange","e","searchTerm","target","value","handleKeyUp","SearchActions","onKeyUp","onChange","placeholder","index_es","icon","faSearch","faBell","searchActions","Menu","_this$state","Menu_CommonMenu","Menu_Input","switchRoutes","react_router","routes","prop","exact","App","components_Menu","Boolean","window","hostname","match","initialState","Map","List","home_handleActions","set","update","films_handleActions","dramas_handleActions","moviedetail_handleActions","tvdetail_handleActions","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.77a0d52e.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { GET_MOVIE_PENDING, GET_MOVIE_SUCCESS, GET_MOVIE_FAILURE } from './type';\r\n\r\nconst apiKey = '87dfa1c669eea853da609d4968d294be';\r\n\r\nfunction getMovieAPI(keyword) {\r\n  return axios.get(`https://api.themoviedb.org/3/movie/${keyword}?api_key=${apiKey}&language=en-US&page=1`)\r\n}\r\n\r\nexport const requestMovie = () => ({\r\n  type: GET_MOVIE_PENDING\r\n})\r\n\r\nexport const receiveMovie = data => ({\r\n  type: GET_MOVIE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const falidReceiveMovie = error => ({\r\n  type: GET_MOVIE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const getMovie = (url) => dispatch => {\r\n  dispatch(requestMovie());\r\n  return getMovieAPI(url).then(res => {\r\n    dispatch(receiveMovie(res.data))\r\n  })\r\n  .catch(err => {\r\n    dispatch(falidReceiveMovie(err))\r\n  })\r\n}","export const GET_MOVIE_PENDING = 'home/GET_MOVIE_PENDING';\r\nexport const GET_MOVIE_SUCCESS = 'home/GET_MOVIE_SUCCESS';\r\nexport const GET_MOVIE_FAILURE = 'home/GET_MOVIE_FAILURE';\r\nexport const GET_SEARCHED_MOVIE_PENDING = 'home/GET_SEARCHED_MOVIE_PENDING';\r\nexport const GET_SEARCHED_MOVIE_SUCCESS = 'home/GET_SEARCHED_MOVIE_SUCCESS';\r\nexport const GET_SEARCHED_MOVIE_FAILURE = 'home/GET_SEARCHED_MOVIE_FAILURE';","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieSection = ({ mdetail, bgImg, pagename, category }) => {\r\n    return (\r\n        <div className=\"movie-section\">\r\n            <Link to={category=== \"tv\" ? `/tv/${mdetail.id}` : `/movie/${mdetail.id}`} className=\"movielink\">\r\n                <img src={bgImg === undefined ? pagename === 'movieDetail' ? 'http://via.placeholder.com/255x450' : 'http://via.placeholder.com/450x255' : bgImg} alt={mdetail.title} height={pagename === 'movieDetail' ? 298 : 168 } />\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieSection;","const settings = {\r\n    infinite: false,\r\n    speed: 700,\r\n    slidesToScroll: 6,\r\n    slidesToShow: 6,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1900,\r\n            settings: {\r\n                slidesToShow: 5,\r\n                slidesToScroll: 5,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1620,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 4,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1310,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 3,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1010,\r\n            settings: {\r\n                slidesToShow: 2,\r\n                slidesToScroll: 2,\r\n\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 720,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// const settings = {\r\n//     className: \"slider variable-width\",\r\n//     infinite: false,\r\n//     centerMode: true,\r\n//     slidesToShow: 1,\r\n//     slidesToScroll: 1,\r\n//     initialSlide: 0,\r\n//     variableWidth: true\r\n// };\r\n\r\nexport default settings;","const ConvertImage = (size, path) => {\r\n    let fullImg = 'http://image.tmdb.org/t/p/w300' + path;\r\n    switch (size) {\r\n        case 500:\r\n            return 'http://image.tmdb.org/t/p/w500' + path;\r\n        case 400:\r\n            return 'http://image.tmdb.org/t/p/w400' + path;\r\n        case 300:\r\n            return 'http://image.tmdb.org/t/p/w300' + path;\r\n        case 200:\r\n            return 'http://image.tmdb.org/t/p/w200' + path;\r\n        case 'original':\r\n            return 'http://image.tmdb.org/t/p/original' + path;\r\n        default:\r\n            return fullImg;\r\n    }\r\n};\r\n\r\nexport default ConvertImage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as postActions from 'modules/home/post';\r\nimport Slider from \"react-slick\";\r\nimport MovieSection from 'components/MovieSection';\r\nimport settings from './SliderSettings';\r\nimport ConvertImage from 'components/ConvertImage';\r\n\r\nclass TitleList extends Component {\r\n    componentWillReceiveProps(nextProps) {\r\n        const { PostActions, urlString } = this.props; \r\n        if (nextProps.urlString !== urlString && nextProps.urlString !== \"\") {\r\n            PostActions.getMovie(nextProps.urlString);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { urlString, PostActions } = this.props;\r\n        if (urlString !== \"\") {\r\n            PostActions.getMovie(urlString);\r\n        }\r\n    }\r\n    render() {\r\n        let movieDataShow, searchedMovieShow;\r\n        const { title, moviedatas, sectionId, searched_movie, data_loaded } = this.props; //console.log(\"tl\", moviedatas.toJS());  \r\n\r\n        if (title==='Search Result' && searched_movie.length !== 0) {\r\n            const searchedMovies = searched_movie.results;\r\n            searchedMovieShow = searchedMovies.map((searchedMovie, i) => {\r\n                if (searchedMovie.backdrop_path)\r\n                    var bgImg = ConvertImage(500, searchedMovie.backdrop_path);\r\n                return (\r\n                    <MovieSection\r\n                        mdetail={searchedMovie}\r\n                        bgImg={bgImg}\r\n                        key={i}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        if (moviedatas.toJS()[sectionId]) {\r\n            const moviedataDetails = moviedatas.toJS()[sectionId].data.results;\r\n            movieDataShow = moviedataDetails.map((mdetail, i) => {\r\n                if (mdetail.backdrop_path)\r\n                    var bgImg = ConvertImage(500, mdetail.backdrop_path);\r\n                return (\r\n                    <MovieSection\r\n                        mdetail={mdetail}\r\n                        bgImg={bgImg}\r\n                        key={i}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div className={`collections-container ${title==='Search Result' && 'search-movie-section'}`} data-loaded={data_loaded}>\r\n                <div className=\"collections-row\">\r\n                    <h1 className=\"collections-row-name\">{title}</h1>\r\n                    <Slider {...settings}>\r\n                        {searchedMovieShow}\r\n                        {movieDataShow}\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        moviedatas: state.home.get('data'),\r\n        searched_movie: state.search_movie.data,\r\n        data_loaded: state.search_movie.data_loaded\r\n    }),\r\n    (dispatch) => ({\r\n        PostActions: bindActionCreators(postActions, dispatch)\r\n    })\r\n)(withRouter(TitleList));","import React from 'react';\r\nimport TitleList from './TitleList';\r\n\r\nconst tdetails = [    \r\n    {\r\n        id: 0,\r\n        title: 'Continue Watching',\r\n        urlString: 'now_playing'\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'Originals Contents',\r\n        urlString: 'popular'        \r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Trending Now',\r\n        urlString: 'top_rated'        \r\n    }\r\n]\r\n\r\nconst TitleField = () => {\r\n    return (\r\n        <div className=\"collections-container\"> \r\n            <TitleList title=\"Search Result\" urlString=\"\" />           \r\n            {\r\n                tdetails.map((tdetail) =>\r\n                    <TitleList \r\n                        title={tdetail.title}\r\n                        urlString={tdetail.urlString}\r\n                        sectionId={tdetail.id}\r\n                        key={tdetail.id}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TitleField;","import React, { Component } from 'react';\r\nimport TitleField from './TitleField';\r\n\r\nclass HomeContainer extends Component {\r\n    render() {\r\n        return (\r\n            <TitleField />\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeContainer;","import React, { Component } from 'react';\r\nimport HomeContainer from 'containers/Home/HomeContainer';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <HomeContainer />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst PageHeader = ({name, children}) => {\r\n    return (\r\n        <div className=\"pg-collections-header\">\r\n            <h1 className=\"pg-collections-header-name\">{name}</h1>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageHeader;","import axios from 'axios';\r\nimport { GET_DRAMA_PENDING, GET_DRAMA_SUCCESS, GET_DRAMA_FAILURE } from './type';\r\n\r\nconst apiKey = '87dfa1c669eea853da609d4968d294be';\r\n\r\nfunction getPopularDramaAPI() {\r\n  return axios.get(`https://api.themoviedb.org/3/discover/tv?with_genres=18&sort_by=popularity.desc&vote_count.gte=10&api_key=${apiKey}`)\r\n}\r\nexport const requestTV = () => ({\r\n  type: GET_DRAMA_PENDING\r\n})\r\n\r\nexport const receiveTV = data => ({\r\n  type: GET_DRAMA_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const falidReceiveTV = error => ({\r\n  type: GET_DRAMA_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const getPopularDrama = () => dispatch => {\r\n  dispatch(requestTV());\r\n  return getPopularDramaAPI().then(res => {\r\n    dispatch(receiveTV(res.data))\r\n  })\r\n    .catch(err => {\r\n      dispatch(falidReceiveTV(err))\r\n    })\r\n}","export const GET_DRAMA_PENDING = 'dramas/GET_DRAMA_PENDING';\r\nexport const GET_DRAMA_SUCCESS = 'dramas/GET_DRAMA_SUCCESS';\r\nexport const GET_DRAMA_FAILURE = 'dramas/GET_DRAMA_FAILURE';","import React, { Component } from 'react';\r\nimport PageHeader from 'components/PageHeader';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as dramaActions from 'modules/dramas/postdrama';\r\nimport StackGrid from \"react-stack-grid\";\r\nimport MovieSection from 'components/MovieSection';\r\nimport ConvertImage from 'components/ConvertImage';\r\n\r\nclass FilmsContainer extends Component {\r\n    componentDidMount() {\r\n        const { DramaActions,  } = this.props;\r\n        DramaActions.getPopularDrama();\r\n\r\n        // If search movie in searchBox, it will be redirect homepage\r\n        if (this.props.data_loaded) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        // If search movie in searchBox, it will be redirect homepage\r\n        if(nextProps.data_loaded) {\r\n          this.props.history.push('/')\r\n        }\r\n        if(nextProps.errors){\r\n          console.warn(nextProps.errors)\r\n        }\r\n    }\r\n    render() {\r\n        let dramaDataShow;\r\n        const { dramadatas } = this.props; //console.log(\"drama\", dramadatas.results);   \r\n        const ddatas = dramadatas.results;\r\n        if (ddatas !== undefined) {\r\n            dramaDataShow = ddatas.map((ddata, i) => {\r\n                if (ddata.backdrop_path)\r\n                    var bgImg = ConvertImage(500, ddata.backdrop_path);\r\n                return (\r\n                    <MovieSection\r\n                        mdetail={ddata}\r\n                        bgImg={bgImg}\r\n                        category=\"tv\"\r\n                        key={i}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"collections-container\">\r\n                <PageHeader name=\"Dramas\" />\r\n                <StackGrid\r\n                    // columnWidth={width <= 672 ? '100%' : 298}\r\n                    columnWidth={298}\r\n                    monitorImagesLoaded={true}\r\n                >\r\n                    {dramaDataShow}\r\n                </StackGrid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        dramadatas: state.dramas.data,\r\n        data_loaded: state.search_movie.data_loaded\r\n    }),\r\n    (dispatch) => ({\r\n        DramaActions: bindActionCreators(dramaActions, dispatch)\r\n    })\r\n)(withRouter(FilmsContainer));","import React, { Component } from 'react';\r\nimport DramasContainer from 'containers/Dramas/DramasContainer'\r\n\r\nclass Dramas extends Component {\r\n    render() {\r\n        return (\r\n            <DramasContainer />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dramas;","import React, { Component } from 'react';\r\nimport PageHeader from 'components/PageHeader';\r\n\r\nclass EntertainmentContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"collections-container\">\r\n                <PageHeader name=\"Entertainment\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EntertainmentContainer;","import React, { Component } from 'react';\r\nimport EntertainmentContainer from 'containers/Entertainment/EntertainmentContainer';\r\n\r\nclass Entertainment extends Component {\r\n    render() {\r\n        return (\r\n            <EntertainmentContainer />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Entertainment;","import React, { Component } from 'react';\r\nimport PageHeader from 'components/PageHeader';\r\n\r\nclass NewsContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"collections-container\">\r\n                <PageHeader name=\"News\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsContainer;","import React, { Component } from 'react';\r\nimport NewsContainer from 'containers/News/NewsContainer';\r\n\r\nclass News extends Component {\r\n    render() {\r\n        return (\r\n            <NewsContainer />\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import axios from 'axios';\r\nimport { GET_MOVIE_PENDING, GET_MOVIE_SUCCESS, GET_MOVIE_FAILURE } from './type';\r\n\r\nconst apiKey = '87dfa1c669eea853da609d4968d294be';\r\n\r\nfunction getPopularMovieAPI() {\r\n  let todayDate = new Date();\r\n  let today = todayDate.getFullYear() + '-' + (todayDate.getMonth() + 1) + '-' + todayDate.getDate();\r\n  let oneMonthAgo = (todayDate.getMonth() === 0 ? todayDate.getFullYear() - 1 : todayDate.getFullYear()) + '-' + (todayDate.getMonth() === 0 ? todayDate.getMonth() + 12 : todayDate.getMonth()) + '-' + todayDate.getDate(); \r\n  return axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=${oneMonthAgo}&primary_release_date.lte=${today}`)\r\n  // return axios.get(`https://api.themoviedb.org/3/discover/tv?with_genres=18&sort_by=vote_average.desc&vote_count.gte=10&api_key=${apiKey}`)\r\n}\r\n\r\nexport const requestMovie = () => ({\r\n  type: GET_MOVIE_PENDING\r\n})\r\n\r\nexport const receiveMovie = data => ({\r\n  type: GET_MOVIE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const falidReceiveMovie = error => ({\r\n  type: GET_MOVIE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const getPopularMovie = () => dispatch => {\r\n  dispatch(requestMovie());\r\n  return getPopularMovieAPI().then(res => {\r\n    dispatch(receiveMovie(res.data))\r\n  })\r\n    .catch(err => {\r\n      dispatch(falidReceiveMovie(err))\r\n    })\r\n}","export const GET_MOVIE_PENDING = 'films/GET_MOVIE_PENDING';\r\nexport const GET_MOVIE_SUCCESS = 'films/GET_MOVIE_SUCCESS';\r\nexport const GET_MOVIE_FAILURE = 'films/GET_MOVIE_FAILURE';","import React, { Component } from 'react';\r\nimport PageHeader from 'components/PageHeader';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as postActions from 'modules/films/postmovie';\r\nimport StackGrid from \"react-stack-grid\";\r\nimport MovieSection from 'components/MovieSection';\r\nimport ConvertImage from 'components/ConvertImage';\r\n\r\nclass FilmsContainer extends Component {\r\n    componentDidMount() {\r\n        const { PostActions,  } = this.props;\r\n        PostActions.getPopularMovie();\r\n\r\n        // If search movie in searchBox, it will be redirect homepage\r\n        if (this.props.data_loaded) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        // If search movie in searchBox, it will be redirect homepage\r\n        if(nextProps.data_loaded) {\r\n          this.props.history.push('/')\r\n        }\r\n        if(nextProps.errors){\r\n          console.warn(nextProps.errors)\r\n        }\r\n    }\r\n    render() {\r\n        let movieDataShow;\r\n        const { moviedatas } = this.props; //console.log(\"Fm\", moviedatas.results);   \r\n        const mdatas = moviedatas.results;\r\n        if (mdatas !== undefined) {\r\n            movieDataShow = mdatas.map((mdata, i) => {\r\n                if (mdata.backdrop_path)\r\n                    var bgImg = ConvertImage(500, mdata.backdrop_path);\r\n                return (\r\n                    <MovieSection\r\n                        mdetail={mdata}\r\n                        bgImg={bgImg}\r\n                        key={i}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"films collections-container\">\r\n                <PageHeader name=\"Films\" />\r\n                <StackGrid\r\n                    // columnWidth={width <= 672 ? '100%' : 298}\r\n                    columnWidth={298}\r\n                    monitorImagesLoaded={true}\r\n                >\r\n                    {movieDataShow}\r\n                </StackGrid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        moviedatas: state.films.data,\r\n        data_loaded: state.search_movie.data_loaded\r\n    }),\r\n    (dispatch) => ({\r\n        PostActions: bindActionCreators(postActions, dispatch)\r\n    })\r\n)(withRouter(FilmsContainer));","import React, { Component } from 'react';\r\nimport FilmsContainer from 'containers/Films/FilmsContainer';\r\n\r\nclass Films extends Component {\r\n    render() {\r\n        return (\r\n            <FilmsContainer />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Films;","import React, { Component } from 'react';\r\nimport PageHeader from 'components/PageHeader';\r\n\r\nclass OriginalsContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"collections-container\">\r\n               <PageHeader name=\"Originals\" /> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OriginalsContainer;","import React, { Component } from 'react';\r\nimport OriginalsContainer from 'containers/Originals/OriginalsContainer';\r\n\r\nclass Originals extends Component {\r\n    render() {\r\n        return (\r\n            <OriginalsContainer />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Originals;","import React, { Component } from 'react';\r\nimport PageHeader from 'components/PageHeader';\r\n\r\nclass RecentlyAddedContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"collections-container\">\r\n              <PageHeader name=\"Recently Added\" />  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RecentlyAddedContainer;","import React, { Component } from 'react';\r\nimport RecentlyAddedContainer from 'containers/RecentlyAdded/RecentlyAddedContainer';\r\n\r\nclass RecentlyAdded extends Component {\r\n    render() {\r\n        return (\r\n            <RecentlyAddedContainer />\r\n        );\r\n    }\r\n}\r\n\r\nexport default RecentlyAdded;","import axios from 'axios';\r\nimport { GET_MOVIE_PENDING, GET_MOVIE_SUCCESS, GET_MOVIE_FAILURE } from './type';\r\n\r\nconst apiKey = '87dfa1c669eea853da609d4968d294be';\r\n\r\nfunction getMovieDetailAPI(id) {\r\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US&append_to_response=credits`)\r\n}\r\n\r\nexport const requestMovie = () => ({\r\n  type: GET_MOVIE_PENDING\r\n})\r\n\r\nexport const receiveMovie = data => ({\r\n  type: GET_MOVIE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const falidReceiveMovie = error => ({\r\n  type: GET_MOVIE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const getMovieDetail = (id) => dispatch => {\r\n  dispatch(requestMovie());\r\n  return getMovieDetailAPI(id).then(res => {\r\n    dispatch(receiveMovie(res.data))\r\n  })\r\n  .catch(err => {\r\n    dispatch(falidReceiveMovie(err))\r\n  })\r\n}","export const GET_MOVIE_PENDING = 'moviedetail/GET_MOVIE_PENDING';\r\nexport const GET_MOVIE_SUCCESS = 'moviedetail/GET_MOVIE_SUCCESS';\r\nexport const GET_MOVIE_FAILURE = 'moviedetail/GET_MOVIE_FAILURE';\r\nexport const GET_SMOVIE_PENDING = 'moviedetail/GET_SMOVIE_PENDING';\r\nexport const GET_SMOVIE_SUCCESS = 'moviedetail/GET_SMOVIE_SUCCESS';\r\nexport const GET_SMOVIE_FAILURE = 'moviedetail/GET_SMOVIE_FAILURE';","import axios from 'axios';\r\nimport { GET_SMOVIE_PENDING, GET_SMOVIE_SUCCESS, GET_SMOVIE_FAILURE } from './type';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nconst apiKey = '87dfa1c669eea853da609d4968d294be';\r\n\r\nfunction getSimilarMovieAPI(id) {\r\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${apiKey}&language=en-US&page=1`)\r\n}\r\n\r\nexport const requestMovie = () => ({\r\n  type: GET_SMOVIE_PENDING\r\n})\r\n\r\nexport const receiveMovie = data => ({\r\n  type: GET_SMOVIE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const falidReceiveMovie = error => ({\r\n  type: GET_SMOVIE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const getSimilarMovie = (id) => dispatch => {\r\n  dispatch(requestMovie());\r\n  return getSimilarMovieAPI(id).then(res => {\r\n    dispatch(receiveMovie(res.data))\r\n  })\r\n  .catch(err => {\r\n    dispatch(falidReceiveMovie(err))\r\n  })\r\n}\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport default handleActions({\r\n    [GET_SMOVIE_PENDING]: (state, action) => ({ ...state, pending: true, error: false}),\r\n    [GET_SMOVIE_SUCCESS]: (state, action) => ({ ...state, data: action.payload, pending: false}),\r\n    [GET_SMOVIE_FAILURE]: (state, action) => ({ ...state, pending: false, error: true})\r\n},initialState)","const settings = {\r\n    infinite: false,\r\n    speed: 700,\r\n    slidesToScroll: 8,\r\n    slidesToShow: 8,\r\n    initialSlide: 0,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1900,\r\n            settings: {\r\n                slidesToShow: 8,\r\n                slidesToScroll: 8,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1770,\r\n            settings: {\r\n                slidesToShow: 7,\r\n                slidesToScroll: 7,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1542,\r\n            settings: {\r\n                slidesToShow: 6,\r\n                slidesToScroll: 6,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1350,\r\n            settings: {\r\n                slidesToShow: 5,\r\n                slidesToScroll: 5,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1142,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 4,\r\n\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 922,\r\n            settings: {\r\n                className: \"slider variable-width\",\r\n                infinite: true,\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1,\r\n                initialSlide: 0,\r\n                variableWidth: true\r\n\r\n            }\r\n        }     \r\n    ]\r\n};\r\n\r\nexport default settings;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, compose } from 'redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport * as postActions from 'modules/moviedetail/post';\r\nimport * as similarMovieActions from 'modules/moviedetail/similar';\r\nimport Daredevil from 'assets/images/Logos/Daredevil.png';\r\nimport Slider from \"react-slick\";\r\nimport settings from './detailSliderSettings';\r\nimport MovieSection from 'components/MovieSection';\r\nimport StarRatings from 'react-star-ratings';\r\nimport ConvertImage from 'components/ConvertImage';\r\n\r\nclass MovieDetailContainer extends Component {\r\n    componentDidMount() {\r\n        const { PostActions, SimilarMovieActions } = this.props;\r\n        const id = this.props.location.pathname.substring(7);\r\n        PostActions.getMovieDetail(id);\r\n        SimilarMovieActions.getSimilarMovie(id);\r\n\r\n        // If search movie in searchBox, it will be redirect homepage\r\n        if (this.props.data_loaded) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        //In MovieDetail page, when you click similar movie, it will be render current page again.\r\n        const { PostActions, SimilarMovieActions } = this.props;\r\n        const id = this.props.location.pathname.substring(7)\r\n        const prev_id = prevProps.location.pathname.substring(7)\r\n        // console.log(id ,\",\", prev_id);\r\n        if (id !== prev_id) {\r\n            PostActions.getMovieDetail(id);\r\n            SimilarMovieActions.getSimilarMovie(id);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        // If search movie in searchBox, it will be redirect homepage\r\n        if (nextProps.data_loaded) {\r\n            this.props.history.push('/')\r\n        }\r\n        if (nextProps.errors) {\r\n            console.warn(nextProps.errors)\r\n        }\r\n    }\r\n    render() {\r\n        let SimilarMovies;\r\n        const { moviedata, similar_movies } = this.props;\r\n        const sm_movies = similar_movies.results;\r\n\r\n        if (moviedata.backdrop_path)\r\n            var bgImg = ConvertImage('original', moviedata.backdrop_path);\r\n\r\n        if (sm_movies) {\r\n            SimilarMovies = sm_movies.map((smilar_movie, i) => {\r\n                if (smilar_movie.poster_path)\r\n                    var smImg = ConvertImage(500, smilar_movie.poster_path);\r\n                return (\r\n                    <MovieSection\r\n                        mdetail={smilar_movie}\r\n                        bgImg={smImg}\r\n                        pagename=\"movieDetail\"\r\n                        key={i}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        if (moviedata.vote_average)\r\n            var current_rating = moviedata.vote_average / 2;\r\n        return (\r\n            <div className=\"mdtitle-wrapper\">\r\n                <section className=\"mdtitle-section\" id=\"section-hero\" style={{ backgroundImage: 'url(' + bgImg + ')' }}>\r\n                    <div className=\"left-gradient-overlay\" />\r\n                    <div className=\"hero-wrapper\">\r\n                        <div className=\"hero-header\">\r\n                            <img className=\"title-logo\" src={Daredevil} alt=\"Daredevil\" />\r\n                            <div>{moviedata.title}</div>\r\n                            <StarRatings\r\n                                rating={current_rating}\r\n                                starRatedColor='#b11b1b'\r\n                                starEmptyColor='#ccc'\r\n                                starDimension=\"20px\"\r\n                                starSpacing=\"0px\"\r\n                            />\r\n                            <div className=\"date_duration\">\r\n                                <span className=\"release-date\">{moviedata.release_date}</span>\r\n                                <span className=\"duration\">1 Seasons</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn-group-vertical movie-link-buttons\">\r\n                            <Link to=\"/watch\" className=\"btn btn-primary\">OPENLOAD</Link>\r\n                            <Link to=\"/watch\" className=\"btn btn-success\">STREAMANGO</Link>\r\n                            <Link to=\"/watch\" className=\"btn btn-danger\">MOVHARPOON</Link>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"mdsmilar-section\">\r\n                    <Slider {...settings}>\r\n                        {SimilarMovies}\r\n                    </Slider>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst composedMovieDetailContainer = compose(\r\n    withRouter,\r\n    connect(\r\n        (state) => ({\r\n            moviedata: state.moviedetail.data,\r\n            similar_movies: state.similar.data,\r\n            data_loaded: state.search_movie.data_loaded\r\n        }),\r\n        (dispatch) => ({\r\n            PostActions: bindActionCreators(postActions, dispatch),\r\n            SimilarMovieActions: bindActionCreators(similarMovieActions, dispatch)\r\n        })\r\n    ),\r\n)\r\n    \r\nexport default composedMovieDetailContainer(MovieDetailContainer);","import React from 'react';\r\nimport MovieDetailContainer from 'containers/MovieDetail/MovieDetailContainer';\r\n\r\nconst MovieDetail = () => {\r\n    return (\r\n        <MovieDetailContainer />\r\n    );\r\n};\r\n\r\nexport default MovieDetail;","import axios from 'axios';\r\nimport { GET_DRAMA_PENDING, GET_DRAMA_SUCCESS, GET_DRAMA_FAILURE } from './type';\r\n\r\nconst apiKey = '87dfa1c669eea853da609d4968d294be';\r\n\r\nfunction getDramaDetailAPI(tv_id) {\r\n  return axios.get(`https://api.themoviedb.org/3/tv/${tv_id}?api_key=${apiKey}&language=en-US&append_to_response=credits&page=1`)\r\n}\r\n\r\nexport const requestTV = () => ({\r\n  type: GET_DRAMA_PENDING\r\n})\r\n\r\nexport const receiveTV = data => ({\r\n  type: GET_DRAMA_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const falidReceiveTV = error => ({\r\n  type: GET_DRAMA_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const getDramaDetail = (id) => dispatch => {\r\n  dispatch(requestTV());\r\n  return getDramaDetailAPI(id).then(res => {\r\n    dispatch(receiveTV(res.data))\r\n  })\r\n  .catch(err => {\r\n    dispatch(falidReceiveTV(err))\r\n  })\r\n}","export const GET_DRAMA_PENDING = 'tvdetail/GET_DRAMA_PENDING';\r\nexport const GET_DRAMA_SUCCESS = 'tvdetail/GET_DRAMA_SUCCESS';\r\nexport const GET_DRAMA_FAILURE = 'tvdetail/GET_DRAMA_FAILURE';\r\nexport const GET_SIMILAR_DRAMA_PENDING = 'tvdetail/GET_SIMILAR_DRAMA_PENDING';\r\nexport const GET_SIMILAR_DRAMA_SUCCESS = 'tvdetail/GET_SIMILAR_DRAMA_SUCCESS';\r\nexport const GET_SIMILAR_DRAMA_FAILURE = 'tvdetail/GET_SIMILAR_DRAMA_FAILURE';","import axios from 'axios';\r\nimport { GET_SIMILAR_DRAMA_PENDING, GET_SIMILAR_DRAMA_SUCCESS, GET_SIMILAR_DRAMA_FAILURE } from './type';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nconst apiKey = '87dfa1c669eea853da609d4968d294be';\r\n\r\nfunction getSimilarTV_API(tv_id) {\r\n    return axios.get(`https://api.themoviedb.org/3/tv/${tv_id}/similar?api_key=${apiKey}&language=en-US&page=1`)\r\n}\r\n\r\nexport const requestTV = () => ({\r\n    type: GET_SIMILAR_DRAMA_PENDING\r\n})\r\n\r\nexport const receiveTV = data => ({\r\n    type: GET_SIMILAR_DRAMA_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const falidReceiveTV = error => ({\r\n    type: GET_SIMILAR_DRAMA_FAILURE,\r\n    payload: error\r\n})\r\n\r\nexport const getSimilarTV = (id) => dispatch => {\r\n    dispatch(requestTV());\r\n    return getSimilarTV_API(id).then(res => {\r\n        dispatch(receiveTV(res.data))\r\n    })\r\n    .catch(err => {\r\n        dispatch(falidReceiveTV(err))\r\n    })\r\n}\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport default handleActions({\r\n    [GET_SIMILAR_DRAMA_PENDING]: (state, action) => ({ ...state, pending: true, error: false }),\r\n    [GET_SIMILAR_DRAMA_SUCCESS]: (state, action) => ({ ...state, data: action.payload, pending: false }),\r\n    [GET_SIMILAR_DRAMA_FAILURE]: (state, action) => ({ ...state, pending: false, error: true })\r\n}, initialState)","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TVSection extends Component {\r\n    render() {\r\n        const { mdetail, bgImg, pagename, category} = this.props;\r\n        return (\r\n            <div className=\"movie-section\">                \r\n                <Link to={category === \"tv\" ? `/tv/${mdetail.id}` : `/movie/${mdetail.id}`} className=\"movielink\">\r\n                    <img src={bgImg === undefined ? pagename === 'movieDetail' ? 'http://via.placeholder.com/255x450' : 'http://via.placeholder.com/450x255' : bgImg} alt={mdetail.title} height={pagename === 'movieDetail' ? 298 : 168} />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TVSection;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport * as dramaActions from 'modules/tvdetail/postdrama';\r\nimport * as similarTVActions from 'modules/tvdetail/similartv';\r\nimport Daredevil from 'assets/images/Logos/Daredevil.png';\r\nimport Slider from \"react-slick\";\r\nimport settings from 'containers/MovieDetail/detailSliderSettings';\r\nimport TVSection from 'components/TVSection';\r\nimport StarRatings from 'react-star-ratings';\r\nimport ConvertImage from 'components/ConvertImage';\r\n\r\nclass TVDetailContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            episodes_count: this.props\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { DramaActions, SimilarTVActions } = this.props;\r\n        const id = this.props.location.pathname.substring(4);\r\n        DramaActions.getDramaDetail(id);\r\n        SimilarTVActions.getSimilarTV(id);\r\n\r\n        // If search movie in searchBox, it will be redirect homepage\r\n        if (this.props.data_loaded) {\r\n            this.props.history.push('/');\r\n        }\r\n        // if (similar_tv.results)\r\n        //     similar_tv.results.map((sm_tv) => DramaActions.getDramaEpisodes(sm_tv.id))\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        //In MovieDetail page, when you click similar movie, it will be render current page again.\r\n        const { DramaActions, SimilarTVActions } = this.props;\r\n        const id = this.props.location.pathname.substring(4)\r\n        const prev_id = prevProps.location.pathname.substring(4)\r\n        if (id !== prev_id) {            \r\n            DramaActions.getDramaDetail(id);\r\n            SimilarTVActions.getSimilarTV(id);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        // If search movie in searchBox, it will be redirect homepage\r\n        if (nextProps.data_loaded) {\r\n            this.props.history.push('/')\r\n        }\r\n        if (nextProps.errors) {\r\n            console.warn(nextProps.errors)\r\n        }\r\n    }\r\n    render() {\r\n        let SimilarTVs;\r\n        const { dramadata, similar_tv } = this.props; //console.log(dramadata);\r\n        const sm_tvs = similar_tv.results; //console.log(episode_num);\r\n\r\n        if (dramadata.backdrop_path)\r\n            var bgImg = ConvertImage('original', dramadata.backdrop_path);\r\n\r\n        // console.log(episode_num)\r\n        if (sm_tvs) {\r\n            SimilarTVs = sm_tvs.map((smilar_tv, i) => {\r\n                \r\n                if (smilar_tv.poster_path)\r\n                    var smImg = ConvertImage(500, smilar_tv.poster_path);\r\n                return (\r\n                    <TVSection\r\n                        mdetail={smilar_tv}\r\n                        bgImg={smImg}\r\n                        pagename=\"movieDetail\"\r\n                        category=\"tv\"\r\n                        key={i}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        if (dramadata.vote_average)\r\n            var current_rating = dramadata.vote_average / 2;\r\n        return (\r\n            <div className=\"mdtitle-wrapper\">\r\n                <section className=\"mdtitle-section\" id=\"section-hero\" style={{ backgroundImage: 'url(' + bgImg + ')' }}>\r\n                    <div className=\"left-gradient-overlay\" />\r\n                    <div className=\"hero-wrapper\">\r\n                        <div className=\"hero-header\">\r\n                            <img className=\"title-logo\" src={Daredevil} alt=\"Daredevil\" />\r\n                            <div>{dramadata.original_name}</div>\r\n                            <StarRatings\r\n                                rating={current_rating}\r\n                                starRatedColor='#b11b1b'\r\n                                starEmptyColor='#ccc'\r\n                                starDimension=\"20px\"\r\n                                starSpacing=\"0px\"\r\n                            />\r\n                            <div className=\"date_duration\">\r\n                                <span className=\"release-date\">{dramadata.first_air_date}</span>\r\n                                <span className=\"duration\">{dramadata.number_of_seasons} Seasons</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn-group-vertical movie-link-buttons\">\r\n                            <Link to=\"/watch\" className=\"btn btn-primary\">OPENLOAD</Link>\r\n                            <Link to=\"/watch\" className=\"btn btn-success\">STREAMANGO</Link>\r\n                            <Link to=\"/watch\" className=\"btn btn-danger\">MOVHARPOON</Link>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"mdsmilar-section\">\r\n                    <Slider {...settings}>\r\n                        {SimilarTVs}\r\n                    </Slider>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        dramadata: state.tvdetail.data,\r\n        similar_tv: state.similartv.data,\r\n        data_loaded: state.search_movie.data_loaded\r\n    }),\r\n    (dispatch) => ({\r\n        DramaActions: bindActionCreators(dramaActions, dispatch),\r\n        SimilarTVActions: bindActionCreators(similarTVActions, dispatch)\r\n    })\r\n)(withRouter(TVDetailContainer));","import React from 'react';\r\nimport TVDetailContainer from 'containers/TVDetail/TVDetailContainer';\r\n\r\nconst TVDetail = () => {\r\n    return (\r\n        <TVDetailContainer />\r\n    );\r\n};\r\n\r\nexport default TVDetail;","import React, { Component } from 'react';\r\nimport ReactJWPlayer from 'react-jw-player';\r\n\r\nconst playlist = [{\r\n    file: 'https://content.jwplatform.com/videos/pNLwBC31-HpVzMx7u.mp4',\r\n    image: 'https://content.jwplatform.com/thumbs/pNLwBC31-1280.jpg',\r\n    tracks: [{\r\n        label: 'English',\r\n        kind: 'captions',\r\n        'default': true\r\n    }],\r\n    description: \"POV Surfing View Empty Ocean Waves Crashing\"\r\n},\r\n{\r\n    file: 'https://cdn.jwplayer.com/videos/l76Ij09F-8yQ1cYbs.mp4',\r\n    image: \"https://cdn.jwplayer.com/thumbs/XH9vzksD-720.jpg\",\r\n    description: \"Flashing sparks on black background in slow motion\",\r\n},\r\n{\r\n    file: 'https://cdn.jwplayer.com/videos/KkqEqb3o-8yQ1cYbs.mp4',\r\n    image: \"https://cdn.jwplayer.com/thumbs/Juu4i0xE-720.jpg\",\r\n    description: \"Rear view slow motion shot of a group of teenage skater friends walking on mountain road with long boards together in slow motion\"\r\n}];\r\n\r\nclass WatchContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoTitle: '',\r\n        };\r\n        this.onVideoLoad = this.onVideoLoad.bind(this);\r\n    }\r\n    onVideoLoad(event) {\r\n        this.setState({\r\n            videoTitle: event.item.description // this only works with json feeds!\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ReactJWPlayer\r\n                    playerId='my-jw-player-instance'\r\n                    playerScript='https://content.jwplatform.com/libraries/oCTK7cQT.js'\r\n                    playlist={playlist}\r\n                    onVideoLoad={this.onVideoLoad}\r\n                    customProps={{ displayMode: 'shelf' }}                    \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchContainer;","import Home from 'views/Home';\r\nimport Dramas from 'views/Dramas';\r\nimport Entertainment from 'views/Entertainment';\r\nimport News from 'views/News';\r\nimport Films from 'views/Films';\r\nimport Originals from 'views/Originals';\r\nimport RecentlyAdded from 'views/RecentlyAdded';\r\nimport MovieDetail from 'views/MovieDetail';\r\nimport TVDetail from 'views/TVDetail';\r\nimport Watch from 'views/Watch';\r\n\r\nconst dashboardRoutes = [\r\n    {\r\n        path: \"/\",\r\n        name: \"Home\",\r\n        component: Home\r\n    },\r\n    {\r\n        path:\"/movie/:id\",\r\n        name: \"MovieDetail\",\r\n        component: MovieDetail\r\n    },\r\n    {\r\n        path:\"/tv/:id\",\r\n        name: \"TVDetail\",\r\n        component: TVDetail\r\n    },\r\n    {\r\n        path: \"/tv-programmes/dramas\",\r\n        name: \"Dramas\",\r\n        component: Dramas\r\n    },\r\n    {\r\n        path: \"/tv-programmes/entertainment\",\r\n        name: \"Entertainment\",\r\n        component: Entertainment\r\n    },\r\n    {\r\n        path: \"/tv-programmes/news\",\r\n        name: \"News\",\r\n        component: News\r\n    },\r\n    {\r\n        path: \"/films\",\r\n        name: \"Films\",\r\n        component: Films\r\n    },\r\n    {\r\n        path: \"/originals\",\r\n        name: \"Originals\",\r\n        component: Originals\r\n    },\r\n    {\r\n        path: \"/recently-added\",\r\n        name: \"Recently Added\",\r\n        component: RecentlyAdded\r\n    },\r\n    {\r\n        path: \"/watch\",\r\n        name: \"Watch\",\r\n        component: Watch\r\n    }\r\n];\r\n\r\nexport default dashboardRoutes;","import React from 'react';\r\nimport WatchContainer from 'containers/Watch/WatchContainer';\r\n\r\nconst Watch = () => {\r\n    return (\r\n        <WatchContainer />\r\n    );\r\n};\r\n\r\nexport default Watch;","import React, { Component } from 'react';\r\n\r\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nclass CommonMenu extends Component {\r\n    render() {\r\n        const { toggleDropdown, toggle, dropdownOpen, isOpen, pathname } = this.props;\r\n        return (\r\n            <Navbar light expand=\"lg\">\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/\" style={{ borderColor: pathname === '/' && 'rgb(184, 19, 13)' }}>Home</NavLink>\r\n                        </NavItem>\r\n\r\n                        <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown} nav inNavbar>\r\n                            <DropdownToggle\r\n                                onMouseOver={toggleDropdown}\r\n                                style={{ borderColor: (pathname === '/tv-programmes/dramas' || pathname === \"/tv-programmes/entertainment\" || pathname === \"/tv-programmes/news\") && 'rgb(184, 19, 13)' }} nav caret>\r\n                                TV Programmes\r\n                            </DropdownToggle>\r\n                            <DropdownMenu left=\"true\">\r\n                                <div className=\"triangle\"></div>\r\n                                <DropdownItem>\r\n                                    <NavLink href=\"/#/tv-programmes/dramas\">Dramas</NavLink>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <NavLink href=\"/#/tv-programmes/entertainment\">Entertainment / Current affairs</NavLink>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <NavLink href=\"/#/tv-programmes/news\">News</NavLink>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                        <NavItem>\r\n                            <NavLink href=\"/#/films\" style={{ borderColor: pathname === '/films' && 'rgb(184, 19, 13)' }}>Films</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/#/originals\" style={{ borderColor: pathname === '/originals' && 'rgb(184, 19, 13)' }}>Originals</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/#/recently-added\" style={{ borderColor: pathname === '/recently-added' && 'rgb(184, 19, 13)' }}>Recently Added</NavLink>\r\n                        </NavItem>\r\n                    </Nav>                    \r\n                </Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommonMenu;","import axios from 'axios';\r\nimport { GET_SEARCHED_MOVIE_PENDING, GET_SEARCHED_MOVIE_SUCCESS, GET_SEARCHED_MOVIE_FAILURE } from './type';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nconst apiKey = '87dfa1c669eea853da609d4968d294be';\r\n\r\nfunction getSearchedMovieAPI(title) {\r\n  return axios.get(`https://api.themoviedb.org/3/search/multi?query=${title}&api_key=${apiKey}`)\r\n}\r\n\r\nexport const requestMovie = () => ({\r\n  type: GET_SEARCHED_MOVIE_PENDING\r\n})\r\n\r\nexport const receiveMovie = data => ({\r\n  type: GET_SEARCHED_MOVIE_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const falidReceiveMovie = error => ({\r\n  type: GET_SEARCHED_MOVIE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const getSearchedMovie = (title) => dispatch => {\r\n  dispatch(requestMovie());\r\n  return getSearchedMovieAPI(title).then(res => {\r\n    dispatch(receiveMovie(res.data))\r\n  })\r\n  .catch(err => {\r\n    dispatch(falidReceiveMovie(err))\r\n  })\r\n}\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data_loaded: false,\r\n    data: []\r\n}\r\n\r\nexport default handleActions({\r\n    [GET_SEARCHED_MOVIE_PENDING]: (state, action) => ({ ...state, pending: true, error: false, data_loaded: false}),\r\n    [GET_SEARCHED_MOVIE_SUCCESS]: (state, action) => ({ ...state, data: action.payload, pending: false, data_loaded: true}),\r\n    [GET_SEARCHED_MOVIE_FAILURE]: (state, action) => ({ ...state, pending: false, error: true, data_loaded: false})\r\n},initialState)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\r\nimport * as searchActions from 'modules/home/searchmovie';\r\n\r\nclass Input extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchTerm: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ searchTerm: e.target.value });\r\n    }\r\n    handleKeyUp = (e) => {\r\n        const { SearchActions } = this.props;\r\n        const { searchTerm } = this.state;\r\n        if (e.key === 'Enter' && this.state.searchTerm !== '') {\r\n            SearchActions.getSearchedMovie(searchTerm);\r\n        }\r\n    }    \r\n    render() {\r\n        const { searchTerm } = this.state;\r\n        const { handleChange, handleKeyUp } = this;\r\n        return (\r\n            <div id=\"menuinput-wrap\">\r\n                <div className=\"search_wrap\">\r\n                    <input id=\"search\" name=\"search\" onKeyUp={handleKeyUp} onChange={handleChange} value={searchTerm} type=\"text\" placeholder=\"What're we looking for ?\" />\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </div>\r\n                <FontAwesomeIcon icon={faBell} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        data_loaded: state.search_movie.data_loaded\r\n    }),\r\n    (dispatch) => ({\r\n        SearchActions: bindActionCreators(searchActions, dispatch)\r\n    })\r\n)(Input);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CommonMenu from './CommonMenu';\r\nimport Input from './Input';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.toggle = this.toggle.bind(this);\r\n            this.toggleDropdown = this.toggleDropdown.bind(this);\r\n            this.state = {\r\n                isOpen: false,\r\n                dropdownOpen: false,\r\n            };\r\n        }\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    toggleDropdown() {\r\n      this.setState({\r\n        dropdownOpen: !this.state.dropdownOpen\r\n      });\r\n    }   \r\n\r\n    render() {\r\n        const { dropdownOpen, isOpen } = this.state;\r\n        const { toggleDropdown, toggle } = this\r\n        const { pathname } = this.props.location;\r\n        return (\r\n            <div className=\"menu-content\">\r\n              <CommonMenu \r\n                toggle={toggle}\r\n                dropdownOpen={dropdownOpen}\r\n                toggleDropdown={toggleDropdown}\r\n                isOpen={isOpen}\r\n                pathname={pathname}\r\n              />  \r\n              <Input />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Menu);\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport routes from 'routes.js';\nimport Menu from 'components/Menu';\n\nconst switchRoutes = (\n  <Switch>\n    {\n      routes.map((prop, key) => \n        (prop.path === \"/\") ?\n          (\n            <Route\n              exact\n              path={prop.path}\n              component={prop.component}\n              key={key}\n              />\n              ) : (\n              <Route \n              path={prop.path}\n              component={prop.component}\n              key={key}\n            />\n          )\n        )\n    }\n  </Switch>\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container-fulid\">\n        <Menu />\n        {switchRoutes}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_MOVIE_PENDING, GET_MOVIE_SUCCESS, GET_MOVIE_FAILURE } from './type';\r\nimport { handleActions } from 'redux-actions';\r\nimport { Map, List } from 'immutable';\r\n\r\nlet id = 0;\r\n\r\nconst initialState = Map({\r\n    pending: false,\r\n    error: false,\r\n    data: List()\r\n})\r\n\r\nexport default handleActions({\r\n    [GET_MOVIE_PENDING]: (state, action) => state.set('pending', true).set('error', false),\r\n    [GET_MOVIE_SUCCESS]: (state, { payload: data }) => {             \r\n        const item = Map({ id: id++, data });\r\n        return state.update('data', data => data.push(item)).set('pending', false);\r\n    },\r\n    [GET_MOVIE_FAILURE]: (state, action) => state.set('pending', false).set('error', true)\r\n}, initialState)","import { GET_MOVIE_PENDING, GET_MOVIE_SUCCESS, GET_MOVIE_FAILURE } from './type';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport default handleActions({\r\n    [GET_MOVIE_PENDING]: (state, action) => ({ ...state, pending: true, error: false}),\r\n    [GET_MOVIE_SUCCESS]: (state, action) => ({ ...state, data: action.payload, pending: false}),\r\n    [GET_MOVIE_FAILURE]: (state, action) => ({ ...state, pending: false, error: true})\r\n},initialState)","import { GET_DRAMA_PENDING, GET_DRAMA_SUCCESS, GET_DRAMA_FAILURE } from './type';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport default handleActions({\r\n    [GET_DRAMA_PENDING]: (state, action) => ({ ...state, pending: true, error: false}),\r\n    [GET_DRAMA_SUCCESS]: (state, action) => ({ ...state, data: action.payload, pending: false}),\r\n    [GET_DRAMA_FAILURE]: (state, action) => ({ ...state, pending: false, error: true})\r\n},initialState)","import { GET_MOVIE_PENDING, GET_MOVIE_SUCCESS, GET_MOVIE_FAILURE } from './type';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport default handleActions({\r\n    [GET_MOVIE_PENDING]: (state, action) => ({ ...state, pending: true, error: false}),\r\n    [GET_MOVIE_SUCCESS]: (state, action) => ({ ...state, data: action.payload, pending: false}),\r\n    [GET_MOVIE_FAILURE]: (state, action) => ({ ...state, pending: false, error: true})\r\n},initialState)","import { GET_DRAMA_PENDING, GET_DRAMA_SUCCESS, GET_DRAMA_FAILURE } from './type';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: [],\r\n}\r\n\r\nexport default handleActions({\r\n    [GET_DRAMA_PENDING]: (state, action) => ({ ...state, pending: true, error: false}),\r\n    [GET_DRAMA_SUCCESS]: (state, action) => ({ ...state, data: action.payload, pending: false}),\r\n     [GET_DRAMA_FAILURE]: (state, action) => ({ ...state, pending: false, error: true})\r\n},initialState)","import { combineReducers } from 'redux';\r\nimport home from 'modules/home';\r\nimport films from 'modules/films';\r\nimport dramas from 'modules/dramas';\r\nimport moviedetail from 'modules/moviedetail';\r\nimport tvdetail from 'modules/tvdetail';\r\nimport similartv from 'modules/tvdetail/similartv';\r\nimport similar from 'modules/moviedetail/similar';\r\nimport search_movie from 'modules/home/searchmovie';\r\n\r\nconst reducers = combineReducers({\r\n    home,\r\n    films,\r\n    dramas,\r\n    moviedetail,\r\n    tvdetail,\r\n    similartv,\r\n    similar,\r\n    search_movie,\r\n})\r\n\r\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux'; \nimport { Provider } from 'react-redux';\nimport reducers from './modules';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n//Thunk\nimport thunk from 'redux-thunk';\n\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.css';\n// Slick Slider CSS\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n// rc-menu CSS\nimport \"rc-menu/assets/index.css\";\n\nimport './index.css';\n\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Daredevil.0a7d63d0.png\";"],"sourceRoot":""}